#!/bin/bash
# Установка сервера терминалов RX@Etersoft

# Убедимся что находимся под рутом
if [ "$(id -u)" != "0" ]; then
   echo "Скрипт установки работает только под пользователем 'root'." 1>&2
   exit 1
fi

. ./functions.sh


# Отредактируйте файл настроек SSH-сервера:
# /etc/ssh/sshd_config
# для увеличения безопасности желательно изменить порт по умолчанию 22 на какойнибудь
# другой, например, 2122:
# Port 2122
# Этот же порт затем нужно прописать в настройках сервера.
# Найдите и отредактируйте строки, как показано ниже, если они отсутствуют, пропишите вручную:
# RSAAuthentication yes
# PubkeyAuthentication yes
# #AuthorizedKeysFile
# Если для авторизации будут использоваться данные системных пользователей
# (ENABLE_USERMODE_AUTHENTICATION="1") или сервер SSH
# (ENABLE_SSH_AUTHENTICATION="1"), то в строке AllowUsers необходимо прописать всех
# пользователей сервера FreeNX, включая пользователя с именем nx:
# AllowUsers nx user1 user2 user3
# или
# AllowUsers nx user1@127.0.0.1 user2@127.0.0.1 user3@127.0.0.1
# или добавляем всех пользователей в группу nx и прописываем в параметрах
# AllowGroups nx

# С этими настройками доступ к SSH-серверу с других компьютеров будет невозможен.
# Если настроена авторизация с использованием собственной базы пользователей NXсервера
# (ENABLE_PASSDB_AUTHENTICATION="1") или режима суперпользователя
# (ENABLE_PASSDB_AUTHENTICATION="1"), то эти настройки выполнять не нужно.
# Выполните другие настройки безопасности SSH на своё усмотрение.
# После проделанных настроек перезапустите SSHсервер:
# sudo service ssh restart

apt-get -y install expect sysv-rc-conf binutils cifs-utils \
libgtkmm-2.4-1c2a libatkmm-1.6-1 libglibmm-2.4-1c2a libpangomm-1.4-1 libcairomm-1.0-1 \
libwxgtk2.8-0 libwxbase2.8-0

release=`lsb_release -r|awk '{print $2}'`
if [ $release = "12.04" -o $release = "14.04" ]

fi

wget ftp://ftp.etersoft.ru/pub/Etersoft/RX@Etersoft/stable/x86_64/Ubuntu/${release}/nx_3.5.1-eter12ubuntu_amd64.deb
wget ftp://ftp.etersoft.ru/pub/Etersoft/RX@Etersoft/stable/x86_64/Ubuntu/${release}/rx-etersoft_1.1.3-eter7ubuntu_amd64.deb
wget ftp://ftp.etersoft.ru/pub/Etersoft/RX@Etersoft/stable/x86_64/Ubuntu/${release}/nxsadmin_0.2.1-eter5ubuntu_amd64.deb
wget http://ftp.etersoft.ru/pub/Etersoft/RX@Etersoft/stable/x86_64/Ubuntu/${release}/opennx_0.16-eter26.svn724ubuntu_amd64.deb

dpkg -i nx_3.5.1*.deb
dpkg -i rx-etersoft*.deb
dpkg -i nxsadmin*.deb
dpkg -i opennx*.deb

# Выполняем предварительную настройку сервера
/usr/bin/rxsetup

chmod 755 /usr/sbin/cupsd
chmod 711 /usr/lib/cups/backend/ipp
# Генерируем ключ NXсервера:
nxsetup --install --setup-nomachine-key
# Примечание: данная команда генерирует ключ сервера по умолчанию, но в целях повышения безопасности
# рекомендуется сгенерировать уникальный ключ, запустив эту команду без параметра --setup-nomachine-key

# Удаляем файл known_hosts:
rm -fr /var/lib/nxserver/home/.ssh/known_hosts

# Запускаем сервер:
service rx-etersoft start
# Добавляем скрипт запуска сервера в автозагрузку:
update-rc.d rx-etersoft defaults

# если в системе используется SELinux, применяем политики по умолчанию:
# sudo restorecon -Rv /var/lib/nxserver
# Если SELinux в системе не используется, команду выполнять не нужно

# Проверяем, что сервер запустился нормально:
nxsetup --test

# После проделанных действий в каталоге /var/lib/nxserver/home/.ssh/ должны появиться ключи.
# Если вы сгенерировали свой уникальный ключ, то из этого каталога необходимо скопировать файл
# client.id_dsa.key на флэшку и импортировать его в NX-клиент
# на каждой машине. Если этого ключа нет или по каким-либо
# причинам вы решили создать новый, воспользуйтесь командой:
# sudo nxkeygen
# /var/lib/nxserver/home/.ssh/client.id_dsa.key

# Если сгенерирован ключ по умолчанию с опцией --setup-nomachine-key, то этот шаг пропускаем.

# ... Настройка

# Конфигурирование оригинального FreeNX осуществляется путем
# редактирования файла /etc/nxserver/node.conf. В сборках RX@Etersoft в целях упрощения настроек
# этот файл разбит на несколько, расположенных в каталоге /etc/nxserver/node.conf.d/

# NXсервер для авторизации изначально использует пароли системных пользователей, но можно
# создать свою базу данных пользователей. Раскомментируем и изменим параметр
# ENABLE_PASSDB_AUTHENTIFICATION c "0" на "1".
# Этим мы разрешаем авторизацию при помощи базы паролей NXServer,
# и необходимость прописывания всех пользователей в файл настройки SSH-сервера
# отпадает, но пользователям придётся запоминать сразу два пароля: на вход в систему
# и доступ к серверу. Поскольку для авторизации пользователей можно использовать только один
# из четырёх режимов, для исключения конфликтов раскомментируем строки с другими способами
# авторизации (ENABLE_USERMODE_AUTHENTICATION, ENABLE_SSH_AUTHENTICATION и
# ENABLE_SU_AUTHENTICATION) и везде прописываем значение "0".
# Далее добавляем пользователей NXсервера и задаём пароли для них:
# sudo nxserver adduser <USERNAME>
# sudo nxserver passwd <USERNAME>
#
# Рекомендую имена пользователей и пароли для них делать такими же, как в системе, чтобы не
# забивать голову лишней информацией ни себе, ни другим.
# При попытке повторного подключения в клиенте всегда будет появляться окно со списком запущенных
# сессий. Чтобы не учить бухгалтеров нажимать на кнопку New, изменяем параметр
# ENABLE_SHOW_RUNNING_SESSIONS на 0. При этом будет автоматом запускаться новый сеанс,
# а при наличии приостановленных сессий будет выводиться окно с их списком.
#
# На время настроек рекомендуется выставить максимальный уровень ведения логов
# NX_LOG_LEVEL=7. После того, как настройка полностью завершена и мы убедились, что всё работает
# нормально, можно отключить ведение логов (ставим обратно 0), чтобы не создавать лишнюю
# нагрузку на систему.
#
# Если вы для протокола SSH используете не 22-й порт, а какой-либо другой (например, 2122), то
# его обязательно надо указать в строке SSHD_PORT=2122
#
# Если вы хотите отключить шифрование трафика, то в строке EXTERNAL_PROXY_IP нужно
# прописать IP-адрес сетевой карты, которая работает с локальной сетью, а также в файерволле
# открыть диапазон TCP-портов на входящий трафик, начиная от [$DISPLAY_BASE+4000] (если
# значение по умолчанию указанной переменной в настройках не меняли, то открываем диапазон портов
# от 1000 до 5000).

#Поверяем правильность конфиг-файла командой:
nxloadconfig --check

# Программа конечно же укажет на ошибку в параметре COMMAND_START_CDE=cdwm, не обращайте
# внимание, этот параметр для системы Solaris.
# Примечание: если на сервере установлена оболочка XFCE или LXDE, то можно задействовать
# этот параметр для запуска одной из указанных оболочек.
# После всех изменений сохраняем файл и перезапустим сервер:
sudo service rx-etersoft restart
# или
# sudo /etc/init.d/freenx-server restart

# Администрировать сервер можно при помощи сторонней утилиты nxsadmin, которая обязательно
# должна быть запущена от имени root'а:
# sudo /usr/sbin/nxsadmin

# Принтеры

sudo chmod 755 /usr/lib/cups/backend/ipp
